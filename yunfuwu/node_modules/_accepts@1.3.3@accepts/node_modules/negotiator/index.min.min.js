/*!
 * negotiator
 * Copyright(c) 2012 Federico Romero
 * Copyright(c) 2012-2014 Isaac Z. Schlueter
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
;"use strict";var modules=Object.create(null);module.exports=Negotiator;module.exports.Negotiator=Negotiator;function Negotiator(b){if(!(this instanceof Negotiator)){return new Negotiator(b)}this.request=b}Negotiator.prototype.charset=function charset(d){var c=this.charsets(d);return c&&c[0]};Negotiator.prototype.charsets=function charsets(c){var d=loadModule("charset").preferredCharsets;return d(this.request.headers["accept-charset"],c)};Negotiator.prototype.encoding=function encoding(d){var c=this.encodings(d);return c&&c[0]};Negotiator.prototype.encodings=function encodings(c){var d=loadModule("encoding").preferredEncodings;return d(this.request.headers["accept-encoding"],c)};Negotiator.prototype.language=function language(d){var c=this.languages(d);return c&&c[0]};Negotiator.prototype.languages=function languages(d){var c=loadModule("language").preferredLanguages;return c(this.request.headers["accept-language"],d)};Negotiator.prototype.mediaType=function mediaType(d){var c=this.mediaTypes(d);return c&&c[0]};Negotiator.prototype.mediaTypes=function mediaTypes(d){var c=loadModule("mediaType").preferredMediaTypes;return c(this.request.headers.accept,d)};Negotiator.prototype.preferredCharset=Negotiator.prototype.charset;Negotiator.prototype.preferredCharsets=Negotiator.prototype.charsets;Negotiator.prototype.preferredEncoding=Negotiator.prototype.encoding;Negotiator.prototype.preferredEncodings=Negotiator.prototype.encodings;Negotiator.prototype.preferredLanguage=Negotiator.prototype.language;Negotiator.prototype.preferredLanguages=Negotiator.prototype.languages;Negotiator.prototype.preferredMediaType=Negotiator.prototype.mediaType;Negotiator.prototype.preferredMediaTypes=Negotiator.prototype.mediaTypes;function loadModule(d){var c=modules[d];if(c!==undefined){return c}switch(d){case"charset":c=require("./lib/charset");break;case"encoding":c=require("./lib/encoding");break;case"language":c=require("./lib/language");break;case"mediaType":c=require("./lib/mediaType");break;default:throw new Error("Cannot find module '"+d+"'")}modules[d]=c;return c};